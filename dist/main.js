(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>a});var r=n(537),o=n.n(r),i=n(645),c=n.n(i)()(o());c.push([t.id,"* {\n    margin: 0px;\n    padding: 0px;   \n}\n\n.content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.add-project-header {\n    font-size: 36px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n}\n\n#add-project-button {\n    margin-bottom: 20px;\n}\n\n.modal {\n    align-items: center;\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: rgba(255, 255, 255, 0.7);\n    transition: all 0.4s;\n    visibility: hidden;\n    opacity: 0;\n}\n\n.modal-content {\n    position: absolute;\n    background: lightcyan;\n    width: 400px;\n    height: 400px;\n    padding: 1em 2em;\n    border: 3px solid green;\n}\n\n#popup:target {\n    visibility: visible;\n    opacity: 1;\n}\n\n.add-list-popup {\n    display: none;\n}\n\n#add-project-form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 150px;\n}\n\n#add-project-title-input {\n    height: 75px;\n    width: 350px;\n    font-size: 32px;\n    padding-left: 15px;\n}\n\n#add-project-submit-button {\n    height: 50px;\n    width: 200px;\n    font-size: 30px;\n}\n\n.project-container {\n    border: 2px solid black;\n    display: grid;\n    justify-content: center;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 400px));\n}\n\n.projects {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid blue;\n    height: 250px;\n}\n\n.project-title {\n    text-align: center;\n    font-size: 36px;\n    margin-bottom: 10px;\n}\n\n.project-item-container {\n    font-size: 25px;\n    border: 2px solid yellow;\n}\n\n.project-item-list {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid green;\n    font-size: 20px;\n}\n\n.project-item-list > * {\n    font-size: 24px;\n}\n\n#project-title-in-item {\n    align-self: center;\n    font-size: 36px;\n    margin-bottom: 20px;\n}\n\n#item-title {\n    font-size: 30px;\n}\n\n/*Height set to 100% so that we can set auto top-margin to align Submit button to bottom.*/\n#add-list-form {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 10px\n}\n\n#add-list-form > * {\n    font-size: 30px;\n    width: 80%;\n}\n\n#add-list-form > button {\n    margin-top: auto\n}\n\n.project-buttons {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    margin-top: auto;\n}\n\n#delete-project-button {\n    width: 40px;\n    background-color: white;\n    margin-left: 2px;\n}\n\n#add-list-button {\n    width: 40px;\n    background-color: white;\n    margin-right: 2px;\n}\n\n.project-item-array {\n    font-size: 22px;\n}\n\n#project-list-item {\n    margin-bottom: 10px;\n}\n\n#add-list-item {\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,uBAAuB;IACvB,kBAAkB;IAClB,MAAM;IACN,SAAS;IACT,OAAO;IACP,QAAQ;IACR,0CAA0C;IAC1C,oBAAoB;IACpB,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;IACrB,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uBAAuB;IACvB,aAAa;IACb,uBAAuB;IACvB,6DAA6D;AACjE;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA,0FAA0F;AAC1F;IACI,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB;AACJ;;AAEA;IACI,eAAe;IACf,UAAU;AACd;;AAEA;IACI;AACJ;;AAEA;IACI,WAAW;IACX,aAAa;IACb,8BAA8B;IAC9B,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,uBAAuB;IACvB,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,uBAAuB;IACvB,iBAAiB;AACrB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,WAAW;AACf",sourcesContent:["* {\r\n    margin: 0px;\r\n    padding: 0px;   \r\n}\r\n\r\n.content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.add-project-header {\r\n    font-size: 36px;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n#add-project-button {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.modal {\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: rgba(255, 255, 255, 0.7);\r\n    transition: all 0.4s;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n}\r\n\r\n.modal-content {\r\n    position: absolute;\r\n    background: lightcyan;\r\n    width: 400px;\r\n    height: 400px;\r\n    padding: 1em 2em;\r\n    border: 3px solid green;\r\n}\r\n\r\n#popup:target {\r\n    visibility: visible;\r\n    opacity: 1;\r\n}\r\n\r\n.add-list-popup {\r\n    display: none;\r\n}\r\n\r\n#add-project-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 150px;\r\n}\r\n\r\n#add-project-title-input {\r\n    height: 75px;\r\n    width: 350px;\r\n    font-size: 32px;\r\n    padding-left: 15px;\r\n}\r\n\r\n#add-project-submit-button {\r\n    height: 50px;\r\n    width: 200px;\r\n    font-size: 30px;\r\n}\r\n\r\n.project-container {\r\n    border: 2px solid black;\r\n    display: grid;\r\n    justify-content: center;\r\n    grid-template-columns: repeat(auto-fit, minmax(300px, 400px));\r\n}\r\n\r\n.projects {\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 2px solid blue;\r\n    height: 250px;\r\n}\r\n\r\n.project-title {\r\n    text-align: center;\r\n    font-size: 36px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.project-item-container {\r\n    font-size: 25px;\r\n    border: 2px solid yellow;\r\n}\r\n\r\n.project-item-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 2px solid green;\r\n    font-size: 20px;\r\n}\r\n\r\n.project-item-list > * {\r\n    font-size: 24px;\r\n}\r\n\r\n#project-title-in-item {\r\n    align-self: center;\r\n    font-size: 36px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n#item-title {\r\n    font-size: 30px;\r\n}\r\n\r\n/*Height set to 100% so that we can set auto top-margin to align Submit button to bottom.*/\r\n#add-list-form {\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px\r\n}\r\n\r\n#add-list-form > * {\r\n    font-size: 30px;\r\n    width: 80%;\r\n}\r\n\r\n#add-list-form > button {\r\n    margin-top: auto\r\n}\r\n\r\n.project-buttons {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-top: auto;\r\n}\r\n\r\n#delete-project-button {\r\n    width: 40px;\r\n    background-color: white;\r\n    margin-left: 2px;\r\n}\r\n\r\n#add-list-button {\r\n    width: 40px;\r\n    background-color: white;\r\n    margin-right: 2px;\r\n}\r\n\r\n.project-item-array {\r\n    font-size: 22px;\r\n}\r\n\r\n#project-list-item {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n#add-list-item {\r\n    position: absolute;\r\n    bottom: 10px;\r\n    right: 10px;\r\n}"],sourceRoot:""}]);const a=c},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,o,i){"string"==typeof t&&(t=[[null,t,void 0]]);var c={};if(r)for(var a=0;a<this.length;a++){var d=this[a][0];null!=d&&(c[d]=!0)}for(var l=0;l<t.length;l++){var s=[].concat(t[l]);r&&c[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var i={},c=[],a=0;a<t.length;a++){var d=t[a],l=r.base?d[0]+r.base:d[0],s=i[l]||0,p="".concat(l," ").concat(s);i[l]=s+1;var A=n(p),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==A)e[A].references++,e[A].updater(u);else{var m=o(u,r);r.byIndex=a,e.splice(a,0,{identifier:p,updater:m,references:1})}c.push(p)}return c}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var i=r(t=t||[],o=o||{});return function(t){t=t||[];for(var c=0;c<i.length;c++){var a=n(i[c]);e[a].references--}for(var d=r(t,o),l=0;l<i.length;l++){var s=n(i[l]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=d}}},569:t=>{var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return t[r](i,i.exports,n),i.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{function t(){let t=[];for(let e=0;e<localStorage.length;e++)localStorage.key(e).includes("project-")&&t.push(localStorage.getItem(localStorage.key(e)));return t}function e(){let t=[];for(let e=0;e<localStorage.length;e++)localStorage.key(e).includes("project-")&&t.push(localStorage.key(e));return t}class r{constructor(t,e){this.title=t,this.lists=e}}class o{constructor(t,e,n,r,o){this.title=t,this.description=e,this.dueDate=n,this.priority=r,this.isCompleted=o}}let i=0,c=0;const a=()=>{document.querySelector("#add-project-submit-button").addEventListener("click",(e=>{e.preventDefault(),function(){console.log(localStorage);const e=t().length,n=document.querySelector("#add-project-title-input"),o=new r(n.value,"");localStorage.setItem("project-"+e,JSON.stringify(o))}(),g(),u(),C()}))},d=()=>{const t=document.querySelectorAll("#add-list-submit-button");t.forEach((function(n,i){t[i].addEventListener("click",(t=>{t.preventDefault(),function(t){const n=document.querySelector("#add-list-title-input"),i=document.querySelector("#add-list-desc-input"),c=document.querySelector("#add-list-due-date"),a=document.querySelector("#priority-selector"),d=a.options[a.selectedIndex].text,l=e()[t],s=localStorage.getItem(l),p=JSON.parse(s),A=[];if(""!==p.lists)for(let t=0;t<p.lists.length;t++)A.push(p.lists[t]);const u=new o(n.value,i.value,c.value,d,!1);A.push(u);const m=new r(p.title,A);localStorage.setItem(l,JSON.stringify(m))}(i),g(),u(),C()}))}))};function l(){document.querySelectorAll(".project-item-container").forEach((function(t){t.addEventListener("click",(e=>{console.log("clicked"),e.preventDefault();const n=t.getAttribute("project-id"),r=t.getAttribute("item-id");i=n,c=r}))}))}const s=document.querySelector(".content"),p=()=>{const t=document.createElement("form");t.setAttribute("id","add-project-form");const e=document.createElement("input");e.id="add-project-title-input",e.type="text",e.minLength="3",e.maxLength="40",e.placeholder="Title",e.required="true";const n=document.createElement("button");return n.setAttribute("id","add-project-submit-button"),n.setAttribute("form","add-project-form"),n.type="submit",n.innerText="Submit",t.appendChild(e),t.appendChild(n),t},A=()=>{const t=document.createElement("form");t.setAttribute("id","add-list-form");const e=document.createElement("input");e.id="add-list-title-input",e.type="text",e.minLength="1",e.maxLength="40",e.placeholder="Title",e.required="true";const n=document.createElement("input");n.id="add-list-desc-input",n.type="text",n.minLength="1",n.maxLength="80",n.placeholder="Description",n.required="true";const r=document.createElement("input");r.id="add-list-due-date",r.type="text";const o=document.createElement("select");o.setAttribute("id","priority-selector");const i=document.createElement("option"),c=document.createElement("option"),a=document.createElement("option");i.setAttribute("id","low-priority"),c.setAttribute("id","normal-priority"),a.setAttribute("id","high-priority"),i.innerText="Low",c.innerText="Normal",a.innerText="High",o.appendChild(i),o.appendChild(c),o.appendChild(a);const d=document.createElement("button");return d.setAttribute("id","add-list-submit-button"),d.setAttribute("form","add-list-form"),d.type="submit",d.innerText="Submit",t.appendChild(e),t.appendChild(n),t.appendChild(r),t.appendChild(o),t.appendChild(d),t};function u(){const e=document.querySelector(".project-container"),n=t();for(let t=0;t<n.length;t++){const r=document.createElement("div");r.classList.add("projects");const o=document.createElement("div");o.classList.add("project-buttons");const i=document.createElement("button");i.setAttribute("id","delete-project-button"),i.innerHTML="<img src='../src/images/delete.svg'/>";const c=document.createElement("button");c.setAttribute("id","add-list-button"),c.innerHTML="<img src='../src/images/pencil.svg'/>",o.appendChild(i),o.appendChild(c);const a=document.createElement("div"),d=document.createElement("div");a.classList.add("project-title"),d.classList.add("project-item-array");const l=n[t],s=JSON.parse(l);if(a.innerText=s.title,r.appendChild(a),void 0!==s.lists){const e=s.lists;for(let n=0;n<e.length;n++){const o=document.createElement("div");o.classList.add("project-item-container"),o.setAttribute("project-id",t),o.setAttribute("item-id",n);const i=document.createElement("p");i.innerText=e[n].title,o.appendChild(i),r.appendChild(o)}}r.appendChild(o),e.appendChild(r)}}const m=()=>{const t=document.createElement("div");t.classList.add("project-item-list");const e=document.createElement("p"),n=document.createElement("p"),r=document.createElement("p"),o=document.createElement("p"),i=document.createElement("p"),c=document.createElement("p");return e.setAttribute("id","project-title-in-item"),n.setAttribute("id","item-title"),r.setAttribute("id","item-desc"),o.setAttribute("id","item-dueDate"),i.setAttribute("id","item-priority"),c.setAttribute("id","item-isCompleted"),t.append(e),t.appendChild(n),t.appendChild(r),t.appendChild(o),t.appendChild(i),t.appendChild(c),t},f=(e,n)=>{console.log("proj index is "+e),console.log("list index is "+n);const r=t()[e],o=JSON.parse(r),i=o.lists[n],c=document.querySelector("#project-title-in-item"),a=document.querySelector("#item-title"),d=document.querySelector("#item-desc"),l=document.querySelector("#item-dueDate"),s=document.querySelector("#item-priority"),p=document.querySelector("#item-isCompleted");console.log(c),c.innerText=o.title,a.innerText=i.title,d.innerText=i.description,l.innerText=i.dueDate,s.innerText=i.priority,p.innerText=i.isCompleted};function g(){document.querySelectorAll(".projects").forEach((t=>{t.remove()}))}function C(){window.location="#"}var h=n(379),x=n.n(h),b=n(795),B=n.n(b),I=n(569),y=n.n(I),v=n(565),j=n.n(v),E=n(216),w=n.n(E),S=n(589),k=n.n(S),L=n(426),T={};T.styleTagTransform=k(),T.setAttributes=j(),T.insert=y().bind(null,"head"),T.domAPI=B(),T.insertStyleElement=w(),x()(L.Z,T),L.Z&&L.Z.locals&&L.Z.locals,s.appendChild((t=>{const e=document.createElement("div");return e.classList.add("add-project-header"),e.innerText=t,e})("Add a project!")),s.appendChild((()=>{const t=document.createElement("button");return t.setAttribute("id","add-project-button"),t.innerHTML="<img src='../src/images/plus-circle.svg'/>",t.style.width="100px",t.style.backgroundColor="white",t})()),s.appendChild((()=>{const t=document.createElement("div");t.classList.add("modal"),t.setAttribute("id","popup");const e=document.createElement("div");return e.classList.add("modal-content"),t.appendChild(e),t})()),s.appendChild((()=>{const t=document.createElement("div");return t.classList.add("project-container"),t})()),u(),(()=>{const t=document.querySelector(".modal-content");document.addEventListener("click",(e=>{e.target.closest("#add-project-button")?(t.innerHTML="",t.appendChild(p()),a(),window.open("#popup","_parent")):e.target.closest("#add-list-button")?(t.innerHTML="",t.appendChild(A()),d(),window.open("#popup","_parent")):e.target.closest(".project-item-container")?(t.innerHTML="",t.appendChild(m()),l(),f(i,c),window.open("#popup","_parent")):e.target.closest(".modal-content")||(t.innerHTML="",window.open("#","_parent"))}))})(),l(),function(){const t=document.querySelectorAll("#delete-project-button");t.forEach((function(n,r){t[r].addEventListener("click",(t=>{t.preventDefault(),function(t){const n=e();console.log("key is "+n[t]),console.log("index is "+t),localStorage.removeItem(n[t])}(r),g(),u()}))}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,