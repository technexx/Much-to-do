(()=>{"use strict";const e=document.querySelector(".content");e.appendChild((e=>{const t=document.createElement("div");return t.classList.add("add-project-header"),t.innerText=e,t})("Add a project!")),e.appendChild((()=>{const e=document.createElement("button");return e.setAttribute("id","add-project-button"),e.innerHTML="<img src='../src/images/plus-circle.svg'/>",e.style.width="100px",e.style.backgroundColor="white",e})()),e.appendChild((()=>{const e=document.createElement("div");return e.classList.add("project-container"),e})()),document.querySelector("#add-project-button").addEventListener("click",(()=>{console.log("clicked!")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFBTUEsRUFBVUMsU0FBU0MsY0FBYyxZQUduQ0YsRUFBUUcsWUFLVSxDQUFDQyxJQUNuQixNQUFNQyxFQUFNSixTQUFTSyxjQUFjLE9BR25DLE9BRkFELEVBQUlFLFVBQVVDLElBQUksc0JBQ2xCSCxFQUFJSSxVQUFZTCxFQUNUQyxHQVRhSyxDQUFjLG1CQUNsQ1YsRUFBUUcsWUFXYSxNQUNyQixNQUFNUSxFQUFTVixTQUFTSyxjQUFjLFVBS3RDLE9BSkFLLEVBQU9DLGFBQWEsS0FBTSxzQkFDMUJELEVBQU9FLFVBQVksNkNBQ25CRixFQUFPRyxNQUFNQyxNQUFRLFFBQ3JCSixFQUFPRyxNQUFNRSxnQkFBa0IsUUFDeEJMLEdBakJhTSxJQUNwQmpCLEVBQVFHLFlBbUJpQixNQUN6QixNQUFNRSxFQUFNSixTQUFTSyxjQUFjLE9BRW5DLE9BREFELEVBQUlFLFVBQVVDLElBQUkscUJBQ1hILEdBdEJhYSxJQ0NMakIsU0FBU0MsY0FBYyx1QkFDL0JpQixpQkFBaUIsU0FBUyxLQUM3QkMsUUFBUUMsSUFBSSxXQUFVLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWNoLXRvLWRvLy4vc3JjL2RvbUVsZW1lbnRzLmpzIiwid2VicGFjazovL211Y2gtdG8tZG8vLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29udGVudFwiKVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURvbUVsZW1lbnRzKCkge1xyXG4gICAgY29udGVudC5hcHBlbmRDaGlsZChwcm9qZWN0SGVhZGVyKFwiQWRkIGEgcHJvamVjdCFcIikpXHJcbiAgICBjb250ZW50LmFwcGVuZENoaWxkKGFkZFByb2plY3RCdXR0b24oKSlcclxuICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQocHJvamVjdENhcmRDb250YWluZXIoKSlcclxufVxyXG5cclxuY29uc3QgcHJvamVjdEhlYWRlciA9ICh0aXRsZSkgPT4ge1xyXG4gICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKVxyXG4gICAgZGl2LmNsYXNzTGlzdC5hZGQoXCJhZGQtcHJvamVjdC1oZWFkZXJcIilcclxuICAgIGRpdi5pbm5lclRleHQgPSB0aXRsZVxyXG4gICAgcmV0dXJuIGRpdlxyXG59XHJcblxyXG5jb25zdCBhZGRQcm9qZWN0QnV0dG9uID0gKCkgPT4ge1xyXG4gICAgY29uc3QgYnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKVxyXG4gICAgYnV0dG9uLnNldEF0dHJpYnV0ZShcImlkXCIsIFwiYWRkLXByb2plY3QtYnV0dG9uXCIpXHJcbiAgICBidXR0b24uaW5uZXJIVE1MID0gXCI8aW1nIHNyYz0nLi4vc3JjL2ltYWdlcy9wbHVzLWNpcmNsZS5zdmcnLz5cIlxyXG4gICAgYnV0dG9uLnN0eWxlLndpZHRoID0gXCIxMDBweFwiXHJcbiAgICBidXR0b24uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJ3aGl0ZVwiXHJcbiAgICByZXR1cm4gYnV0dG9uXHJcbn1cclxuXHJcbmNvbnN0IHByb2plY3RDYXJkQ29udGFpbmVyID0gKCkgPT4ge1xyXG4gICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKVxyXG4gICAgZGl2LmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0LWNvbnRhaW5lclwiKVxyXG4gICAgcmV0dXJuIGRpdlxyXG59IiwiaW1wb3J0IHtjcmVhdGVEb21FbGVtZW50c30gZnJvbSBcIi4vZG9tRWxlbWVudHMuanNcIlxyXG5pbXBvcnQgeyBjb21wYXJlQXNjLCBmb3JtYXQgfSBmcm9tICdkYXRlLWZucydcclxuXHJcbmNyZWF0ZURvbUVsZW1lbnRzKClcclxuXHJcbmNvbnN0IGFkZFByb2plY3RCdXR0b25MaXN0ZW5lciA9ICgpID0+IHtcclxuICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLXByb2plY3QtYnV0dG9uXCIpXHJcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImNsaWNrZWQhXCIpXHJcbiAgICB9KVxyXG59XHJcblxyXG5jbGFzcyBQcm9qZWN0cyB7XHJcbiAgICBjb25zdHJ1Y3RvciAocHJvamVjdE5hbWUsIGxpc3QpIHtcclxuICAgICAgICB0aGlzLnByb2plY3ROYW1lID0gcHJvamVjdE5hbWVcclxuICAgICAgICB0aGlzLmxpc3QgPSBsaXN0XHJcbiAgICB9XHJcbn1cclxuXHJcbmNsYXNzIExpc3RzIHtcclxuICAgIGNvbnN0cnVjdG9yIChsaXN0TmFtZSwgbGlzdEl0ZW1zKSB7XHJcbiAgICAgICB0aGlzLmxpc3ROYW1lID0gbGlzdE5hbWVcclxuICAgICAgIHRoaXMubGlzdEl0ZW1zID0gbGlzdEl0ZW1zXHJcblxyXG4gICAgfVxyXG59XHJcblxyXG5jbGFzcyBMaXN0SXRlbXMge1xyXG4gICAgY29uc3RydWN0b3IgKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHksIGlzQ29tcGxldGVkKSB7XHJcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlOyB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247IHRoaXMuZHVlRGF0ZSA9IGR1ZURhdGU7IHRoaXMucHJpb3JpdHkgPSBwcmlvcml0eTsgdGhpcy5pc0NvbXBsZXRlZCA9IGlzQ29tcGxldGVkO1xyXG4gICAgfVxyXG59XHJcblxyXG5jb25zdCBQcm9qZWN0c0FycmF5ID0gW11cclxuY29uc3QgTGlzdEFycmF5ID0gW11cclxuY29uc3QgTGlzdEl0ZW1zQXJyYXkgPSBbXVxyXG5cclxuZnVuY3Rpb24gYWRkUHJvamVjdChwcm9qZWN0KSB7XHJcbiAgICBQcm9qZWN0c0FycmF5LnB1c2gocHJvamVjdClcclxufVxyXG5cclxuZnVuY3Rpb24gYWRkTGlzdChsaXN0KSB7XHJcbiAgICBMaXN0QXJyYXkucHVzaChsaXN0KVxyXG59XHJcblxyXG5mdW5jdGlvbiBhZGRMaXN0SXRlbShpdGVtKSB7XHJcbiAgICBMaXN0SXRlbXNBcnJheS5wdXNoKGl0ZW0pXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUFuZExvZ0R1bW15T2JqZWN0cygpIHtcclxuICAgIGNvbnN0IGxpc3RJdGVtT25lID0gbmV3IExpc3RJdGVtcyhcIml0ZW1PbmVcIiwgXCJkb2VzIHN0dWZmXCIsIFwiMS8xLzIwMjRcIiwgXCJsb3dcIiwgZmFsc2UpXHJcbiAgICBjb25zdCBsaXN0SXRlbVR3byA9IG5ldyBMaXN0SXRlbXMoXCJpdGVtVHdvXCIsIFwiZG9lcyBtb3JlIHN0dWZmXCIsIFwiNS81LzIwNTRcIiwgXCJtZWRpdW1cIiwgdHJ1ZSlcclxuICAgIGNvbnN0IGxpc3RJdGVtVGhyZWUgPSBuZXcgTGlzdEl0ZW1zKFwiaXRlbVRocmVlXCIsIFwiZG9lcyBzbyBtdWNoIHN0dWZmXCIsIFwiMy8zLzIwMzRcIiwgXCJoaWdoXCIsIGZhbHNlKVxyXG4gICAgXHJcbiAgICBjb25zdCBsaXN0T25lID0gbmV3IExpc3RzKFwidGVzdCBsaXN0XCIsIFtsaXN0SXRlbU9uZSwgbGlzdEl0ZW1Ud28sIGxpc3RJdGVtVGhyZWVdKVxyXG4gICAgXHJcbiAgICBjb25zdCBwcm9qZWN0T25lID0gbmV3IFByb2plY3RzKFwiVGVzdCBQcm9qZWN0XCIsIGxpc3RPbmUpXHJcbiAgICBcclxuICAgIGNvbnNvbGUubG9nKHByb2plY3RPbmUpXHJcbn1cclxuXHJcbmFkZFByb2plY3RCdXR0b25MaXN0ZW5lcigpIl0sIm5hbWVzIjpbImNvbnRlbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJhcHBlbmRDaGlsZCIsInRpdGxlIiwiZGl2IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsImlubmVyVGV4dCIsInByb2plY3RIZWFkZXIiLCJidXR0b24iLCJzZXRBdHRyaWJ1dGUiLCJpbm5lckhUTUwiLCJzdHlsZSIsIndpZHRoIiwiYmFja2dyb3VuZENvbG9yIiwiYWRkUHJvamVjdEJ1dHRvbiIsInByb2plY3RDYXJkQ29udGFpbmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IiJ9