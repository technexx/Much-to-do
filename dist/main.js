(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(537),o=n.n(r),a=n(645),i=n.n(a)()(o());i.push([e.id,"* {\n    margin: 0px;\n    padding: 0px;   \n}\n\n.content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.add-project-header {\n    font-size: 36px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n}\n\n.add-project-popup {\n    position: absolute;\n    top: 50vh;\n    left: 50vw;\n    width: 500px;\n    height: 500px;\n    transform: translate(-50%, -50%);\n    border: 3px solid black;\n    background-color: aliceblue;\n    display: none;\n    flex-direction: column;\n    justify-content: center;\n}\n\n#add-project-form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 150px;\n}\n\n#add-project-title-input {\n    height: 75px;\n    width: 350px;\n    font-size: 32px;\n    padding-left: 15px;\n}\n\n#add-project-submit-button {\n    height: 50px;\n    width: 200px;\n    font-size: 30px;\n}\n\n.project-container {\n    border: 2px solid black;\n    display: grid;\n    justify-content: center;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 350px));\n}\n\n.projects {\n    border: 2px solid blue;\n    height: 200px;\n    gap: 30px;\n    font-size: 20px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,YAAY;IACZ,aAAa;IACb,gCAAgC;IAChC,uBAAuB;IACvB,2BAA2B;IAC3B,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uBAAuB;IACvB,aAAa;IACb,uBAAuB;IACvB,6DAA6D;AACjE;;AAEA;IACI,sBAAsB;IACtB,aAAa;IACb,SAAS;IACT,eAAe;AACnB",sourcesContent:["* {\r\n    margin: 0px;\r\n    padding: 0px;   \r\n}\r\n\r\n.content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.add-project-header {\r\n    font-size: 36px;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.add-project-popup {\r\n    position: absolute;\r\n    top: 50vh;\r\n    left: 50vw;\r\n    width: 500px;\r\n    height: 500px;\r\n    transform: translate(-50%, -50%);\r\n    border: 3px solid black;\r\n    background-color: aliceblue;\r\n    display: none;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n}\r\n\r\n#add-project-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 150px;\r\n}\r\n\r\n#add-project-title-input {\r\n    height: 75px;\r\n    width: 350px;\r\n    font-size: 32px;\r\n    padding-left: 15px;\r\n}\r\n\r\n#add-project-submit-button {\r\n    height: 50px;\r\n    width: 200px;\r\n    font-size: 30px;\r\n}\r\n\r\n.project-container {\r\n    border: 2px solid black;\r\n    display: grid;\r\n    justify-content: center;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 350px));\r\n}\r\n\r\n.projects {\r\n    border: 2px solid blue;\r\n    height: 200px;\r\n    gap: 30px;\r\n    font-size: 20px;\r\n}"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var p=[].concat(e[d]);r&&i[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),t.push(p))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],d=r.base?s[0]+r.base:s[0],p=a[d]||0,l="".concat(d," ").concat(p);a[d]=p+1;var u=n(l),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)t[u].references++,t[u].updater(A);else{var m=o(A,r);r.byIndex=c,t.splice(c,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=n(a[i]);t[c].references--}for(var s=r(e,o),d=0;d<a.length;d++){var p=n(a[d]);0===t[p].references&&(t[p].updater(),t.splice(p,1))}a=s}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{const e=[];class t{constructor(e,t){this.title=e,this.list=t}}const r=document.querySelector(".content");function o(){const t=document.querySelector(".project-container");e.forEach((function(n,r){const o=document.createElement("div");o.classList.add("projects");const a=document.createElement("div"),i=document.createElement("div");a.classList.add("project-title"),i.classList.add("project-item-array"),a.innerText=e[r].title,i.innerText=e[r].list,o.appendChild(a),o.appendChild(i),t.appendChild(o)}))}const a=e=>{const t=document.querySelector(".add-project-popup");e?(t.setAttribute("id","visible"),t.style.display="flex"):(t.setAttribute("id","invisible"),t.style.display="none")};var i=n(379),c=n.n(i),s=n(795),d=n.n(s),p=n(569),l=n.n(p),u=n(565),A=n.n(u),m=n(216),f=n.n(m),h=n(589),v=n.n(h),x=n(426),b={};b.styleTagTransform=v(),b.setAttributes=A(),b.insert=l().bind(null,"head"),b.domAPI=d(),b.insertStyleElement=f(),c()(x.Z,b),x.Z&&x.Z.locals&&x.Z.locals,r.appendChild((e=>{const t=document.createElement("div");return t.classList.add("add-project-header"),t.innerText=e,t})("Add a project!")),r.appendChild((()=>{const e=document.createElement("button");return e.setAttribute("id","add-project-button"),e.innerHTML="<img src='../src/images/plus-circle.svg'/>",e.style.width="100px",e.style.backgroundColor="white",e})()),r.appendChild((()=>{const e=document.createElement("div");return e.classList.add("add-project-popup"),e})()),r.appendChild((()=>{const e=document.createElement("div");return e.classList.add("project-container"),e})()),document.querySelector(".add-project-popup").setAttribute("id","invisible"),document.querySelector(".add-project-popup").appendChild((()=>{const e=document.createElement("form");e.setAttribute("id","add-project-form");const t=document.createElement("input");t.id="add-project-title-input",t.type="text",t.minLength="1",t.maxLength="40",t.placeholder="Title",t.required="true";const n=document.createElement("button");return n.setAttribute("id","add-project-submit-button"),n.setAttribute("form","add-project-form"),n.type="submit",n.innerText="Submit",e.appendChild(t),e.appendChild(n),e})()),o(),(()=>{const e=document.querySelector("#add-project-button"),t=document.querySelector(".add-project-popup");e.addEventListener("click",(()=>{"invisible"===t.getAttribute("id")?a(!0):a(!1)}))})(),document.querySelector("#add-project-submit-button").addEventListener("click",(n=>{n.preventDefault(),a(!1);const r=document.querySelector("#add-project-title-input");var i,c;console.log(localStorage.key(0)),void 0!==localStorage.key(0)&&localStorage.removeItem(localStorage.key(0)),console.log(localStorage),i=r.value,e.push(new t(i,[])),c=r.value,localStorage.setItem("project-"+parseInt(localStorage.length+1),c),document.querySelectorAll(".projects").forEach((e=>{e.remove()})),o()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,