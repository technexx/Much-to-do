(()=>{"use strict";var t={426:(t,n,e)=>{e.d(n,{Z:()=>c});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([t.id,"* {\n    margin: 0px;\n    padding: 0px;   \n}\n\n.content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.add-project-header {\n    font-size: 36px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n}\n\n#add-project-button {\n    margin-bottom: 20px;\n}\n\n.modal {\n    align-items: center;\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: rgba(255, 255, 255, 0.7);\n    transition: all 0.4s;\n    visibility: hidden;\n    opacity: 0;\n}\n\n.modal-content {\n    position: absolute;\n    background: lightcyan;\n    width: 400px;\n    height: 400px;\n    padding: 1em 2em;\n    border: 3px solid green;\n}\n\n#popup:target {\n    visibility: visible;\n    opacity: 1;\n}\n\n.add-list-popup {\n    display: none;\n}\n\n#add-project-form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 150px;\n}\n\n#add-project-title-input {\n    height: 75px;\n    width: 350px;\n    font-size: 32px;\n    padding-left: 15px;\n}\n\n#add-project-submit-button {\n    height: 50px;\n    width: 200px;\n    font-size: 30px;\n}\n\n.project-container {\n    border: 2px solid black;\n    display: grid;\n    justify-content: center;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 400px));\n}\n\n.project-item-container {\n    font-size: 25px;\n    border: 2px solid yellow;\n}\n\n.project-item-list {\n    border: 2px solid green;\n    font-size: 20px;\n}\n\n.projects {\n    display: flex;\n    flex-direction: column;\n    border: 2px solid blue;\n    height: 250px;\n}\n\n.project-title {\n    text-align: center;\n    font-size: 36px;\n    margin-bottom: 10px;\n}\n\n/*Height set to 100% so that we can set auto top-margin to align Submit button to bottom.*/\n#add-list-form {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap:10px\n}\n\n#add-list-form > * {\n    font-size: 30px;\n    width: 80%;\n}\n\n#add-list-form > button {\n    margin-top: auto\n}\n\n/*Absolute position only works relative to parent if parent position also set*/\n#add-list-button {\n    width: 30px;\n    background-color: white;\n    margin-top: auto;\n    margin-left: auto;\n}\n\n.project-item-array {\n    font-size: 22px;\n}\n\n#project-list-item {\n    margin-bottom: 10px;\n}\n\n#add-list-item {\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,uBAAuB;IACvB,kBAAkB;IAClB,MAAM;IACN,SAAS;IACT,OAAO;IACP,QAAQ;IACR,0CAA0C;IAC1C,oBAAoB;IACpB,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;IACrB,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uBAAuB;IACvB,aAAa;IACb,uBAAuB;IACvB,6DAA6D;AACjE;;AAEA;IACI,eAAe;IACf,wBAAwB;AAC5B;;AAEA;IACI,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,mBAAmB;AACvB;;AAEA,0FAA0F;AAC1F;IACI,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB;AACJ;;AAEA;IACI,eAAe;IACf,UAAU;AACd;;AAEA;IACI;AACJ;;AAEA,8EAA8E;AAC9E;IACI,WAAW;IACX,uBAAuB;IACvB,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,WAAW;AACf",sourcesContent:["* {\r\n    margin: 0px;\r\n    padding: 0px;   \r\n}\r\n\r\n.content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.add-project-header {\r\n    font-size: 36px;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n#add-project-button {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.modal {\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: rgba(255, 255, 255, 0.7);\r\n    transition: all 0.4s;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n}\r\n\r\n.modal-content {\r\n    position: absolute;\r\n    background: lightcyan;\r\n    width: 400px;\r\n    height: 400px;\r\n    padding: 1em 2em;\r\n    border: 3px solid green;\r\n}\r\n\r\n#popup:target {\r\n    visibility: visible;\r\n    opacity: 1;\r\n}\r\n\r\n.add-list-popup {\r\n    display: none;\r\n}\r\n\r\n#add-project-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 150px;\r\n}\r\n\r\n#add-project-title-input {\r\n    height: 75px;\r\n    width: 350px;\r\n    font-size: 32px;\r\n    padding-left: 15px;\r\n}\r\n\r\n#add-project-submit-button {\r\n    height: 50px;\r\n    width: 200px;\r\n    font-size: 30px;\r\n}\r\n\r\n.project-container {\r\n    border: 2px solid black;\r\n    display: grid;\r\n    justify-content: center;\r\n    grid-template-columns: repeat(auto-fit, minmax(300px, 400px));\r\n}\r\n\r\n.project-item-container {\r\n    font-size: 25px;\r\n    border: 2px solid yellow;\r\n}\r\n\r\n.project-item-list {\r\n    border: 2px solid green;\r\n    font-size: 20px;\r\n}\r\n\r\n.projects {\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 2px solid blue;\r\n    height: 250px;\r\n}\r\n\r\n.project-title {\r\n    text-align: center;\r\n    font-size: 36px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n/*Height set to 100% so that we can set auto top-margin to align Submit button to bottom.*/\r\n#add-list-form {\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap:10px\r\n}\r\n\r\n#add-list-form > * {\r\n    font-size: 30px;\r\n    width: 80%;\r\n}\r\n\r\n#add-list-form > button {\r\n    margin-top: auto\r\n}\r\n\r\n/*Absolute position only works relative to parent if parent position also set*/\r\n#add-list-button {\r\n    width: 30px;\r\n    background-color: white;\r\n    margin-top: auto;\r\n    margin-left: auto;\r\n}\r\n\r\n.project-item-array {\r\n    font-size: 22px;\r\n}\r\n\r\n#project-list-item {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n#add-list-item {\r\n    position: absolute;\r\n    bottom: 10px;\r\n    right: 10px;\r\n}"],sourceRoot:""}]);const c=a},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",r=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),r&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),r&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,r,o,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var d=0;d<t.length;d++){var l=[].concat(t[d]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:t=>{var n=[];function e(t){for(var e=-1,r=0;r<n.length;r++)if(n[r].identifier===t){e=r;break}return e}function r(t,r){for(var i={},a=[],c=0;c<t.length;c++){var s=t[c],d=r.base?s[0]+r.base:s[0],l=i[d]||0,p="".concat(d," ").concat(l);i[d]=l+1;var A=e(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)n[A].references++,n[A].updater(u);else{var m=o(u,r);r.byIndex=c,n.splice(c,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function o(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,o){var i=r(t=t||[],o=o||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var c=e(i[a]);n[c].references--}for(var s=r(t,o),d=0;d<i.length;d++){var l=e(i[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=s}}},569:t=>{var n={};t.exports=function(t,e){var r=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}},n={};function e(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return t[r](i,i.exports,e),i.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e.nc=void 0,(()=>{function t(){let t=[];for(let n=0;n<localStorage.length;n++)localStorage.key(n).includes("project-")&&t.push(localStorage.getItem(localStorage.key(n)));return t}function n(){let t=[];for(let n=0;n<localStorage.length;n++)localStorage.key(n).includes("project-")&&t.push(localStorage.key(n));return t}class r{constructor(t,n){this.title=t,this.lists=n}}class o{constructor(t,n,e,r,o){this.title=t,this.description=n,this.dueDate=e,this.priority=r,this.isCompleted=o}}const i=document.querySelector(".content");function a(){const n=document.querySelector(".project-container"),e=t();for(let t=0;t<e.length;t++){const r=document.createElement("div");r.classList.add("projects");const o=document.createElement("button");o.setAttribute("id","add-list-button"),o.innerHTML="<img src='../src/images/pencil.svg'/>";const i=document.createElement("div"),a=document.createElement("div");i.classList.add("project-title"),a.classList.add("project-item-array");const c=JSON.parse(e[t]);if(i.innerText=c.title,r.appendChild(i),void 0!==c.lists){const t=c.lists;for(let n=0;n<t.length;n++){const e=document.createElement("div");e.classList.add("project-item-container");const o=document.createElement("p");o.innerText=t[n].title,e.appendChild(o),r.appendChild(e)}r.appendChild(o),n.appendChild(r)}}}function c(){window.location="#"}const s=()=>{document.querySelector("#add-project-submit-button").addEventListener("click",(n=>{n.preventDefault(),function(){const n=t().length,e=document.querySelector("#add-project-title-input"),o=new r(e.value,"");localStorage.setItem("project-"+n,JSON.stringify(o))}(),document.querySelectorAll(".projects").forEach((t=>{t.remove()})),a(),c()}))},d=()=>{const t=document.querySelectorAll("#add-list-submit-button");t.forEach((function(e,i){t[i].addEventListener("click",(t=>{t.preventDefault(),function(t){const e=document.querySelector("#add-list-title-input"),i=document.querySelector("#add-list-desc-input"),a=document.querySelector("#add-list-due-date"),c=document.querySelector("#priority-selector"),s=c.options[c.selectedIndex].text;console.log(n());const d=n()[t];console.log(d);const l=localStorage.getItem(localStorage.key(d)),p=new o(e.value,i.value,a.value,s,!1),A=JSON.parse(l),u=[];if(A.lists=[new o("boo","boo","bap","what",!1)],""!==A.lists)for(let t=0;t<A.lists.length;t++)u.push(A.lists[t]);u.push(p),console.log(JSON.stringify(u));const m=new r(d,JSON.stringify(u));console.log(m),localStorage.setItem(d,m);const f=localStorage.getItem(localStorage.key(d));console.log(JSON.parse(f))}(i),c()}))}))};var l=e(379),p=e.n(l),A=e(795),u=e.n(A),m=e(569),f=e.n(m),g=e(565),h=e.n(g),C=e(216),b=e.n(C),x=e(589),I=e.n(x),B=e(426),y={};y.styleTagTransform=I(),y.setAttributes=h(),y.insert=f().bind(null,"head"),y.domAPI=u(),y.insertStyleElement=b(),p()(B.Z,y),B.Z&&B.Z.locals&&B.Z.locals,i.appendChild((t=>{const n=document.createElement("div");return n.classList.add("add-project-header"),n.innerText=t,n})("Add a project!")),i.appendChild((()=>{const t=document.createElement("button");return t.setAttribute("id","add-project-button"),t.innerHTML="<img src='../src/images/plus-circle.svg'/>",t.style.width="100px",t.style.backgroundColor="white",t})()),i.appendChild((()=>{const t=document.createElement("div");t.classList.add("modal"),t.setAttribute("id","popup");const n=document.createElement("div");return n.classList.add("modal-content"),t.appendChild(n),t})()),i.appendChild((()=>{const t=document.createElement("div");return t.classList.add("project-container"),t})()),a(),(()=>{const t=document.querySelector(".modal-content");document.addEventListener("click",(n=>{n.target.closest("#add-project-button")?(t.innerHTML="",t.appendChild((()=>{const t=document.createElement("form");t.setAttribute("id","add-project-form");const n=document.createElement("input");n.id="add-project-title-input",n.type="text",n.minLength="3",n.maxLength="40",n.placeholder="Title",n.required="true";const e=document.createElement("button");return e.setAttribute("id","add-project-submit-button"),e.setAttribute("form","add-project-form"),e.type="submit",e.innerText="Submit",t.appendChild(n),t.appendChild(e),t})()),s(),window.open("#popup","_parent")):n.target.closest("#add-list-button")?(t.innerHTML="",t.appendChild((()=>{const t=document.createElement("form");t.setAttribute("id","add-list-form");const n=document.createElement("input");n.id="add-list-title-input",n.type="text",n.minLength="1",n.maxLength="20",n.placeholder="Title",n.required="true";const e=document.createElement("input");e.id="add-list-desc-input",e.type="text",e.minLength="1",e.maxLength="40",e.placeholder="Description",e.required="true";const r=document.createElement("input");r.id="add-list-due-date",r.type="text";const o=document.createElement("select");o.setAttribute("id","priority-selector");const i=document.createElement("option"),a=document.createElement("option"),c=document.createElement("option");i.setAttribute("id","low-priority"),a.setAttribute("id","normal-priority"),c.setAttribute("id","high-priority"),i.innerText="Low",a.innerText="Normal",c.innerText="High",o.appendChild(i),o.appendChild(a),o.appendChild(c);const s=document.createElement("button");return s.setAttribute("id","add-list-submit-button"),s.setAttribute("form","add-list-form"),s.type="submit",s.innerText="Submit",t.appendChild(n),t.appendChild(e),t.appendChild(r),t.appendChild(o),t.appendChild(s),t})()),d(),window.open("#popup","_parent")):n.target.closest(".modal-content")||window.open("#","_parent")}))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,